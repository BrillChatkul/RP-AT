{"version":3,"sources":["logo.svg","component/Oneverone.js","component/Listname.js","App.js","reportWebVitals.js","index.js"],"names":["Oneverone","props","setvalue","removeAR","useState","name","setName","className","style","color","fontSize","fontWeight","type","value","onKeyDown","e","key","document","getElementById","click","CheckEnter","maxLength","onChange","target","onChangeName","id","width","textAlign","onClick","alert","Listname","App","dataArray","setDataArray","showDataArray","map","n","length","copyDataList","pop","display","flexWrap","justifyContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"kRAAe,I,wBCwCEA,MApCjB,SAAmBC,GACjB,IAAOC,EAAsBD,EAAtBC,SAASC,EAAaF,EAAbE,SAChB,EAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KAiBA,OAEM,sBAAKC,UAAU,gBAAf,UACE,mBAAGC,MAAO,CAACC,MAAM,QAAQC,SAAS,OAAOC,WAAW,QAApD,iBACA,mBAAGH,MAAO,CAACC,MAAM,QAAQC,SAAS,QAAlC,wBACA,uBAAOH,UAAU,aAAaK,KAAK,OAAOC,MAAOR,EAAMS,UAAY,SAACC,IArB5E,SAAoBA,GACL,UAAVA,EAAEC,KACHC,SAASC,eAAe,gBAAgBC,QAmBqCC,CAAWL,IAAMM,UAAU,KAAKC,SAAU,SAACP,IAhB5H,SAAsBA,GACpBT,EAAQS,EAAEQ,OAAOV,OAe8GW,CAAaT,MACtI,uBACA,gCACA,wBAAQU,GAAG,eAAelB,UAAU,gBAAgBC,MAAO,CAACkB,MAAM,QAAQC,UAAU,UAAWC,QAAS,SAACb,GAfnG,KAATV,EACDwB,MAAM,uBAGR3B,EAASG,GACPC,EAAQ,MAUJ,mBACA,wBAAQC,UAAU,gBAAgBC,MAAO,CAACkB,MAAM,QAAQC,UAAU,UAAWC,QAAS,SAACb,GAAKZ,KAA5F,2B,MCtBK2B,MATf,SAAkB7B,GACd,IAAOI,EAAQJ,EAARI,KACP,OACI,qBAAKE,UAAU,qBAAf,SACKF,KCgCE0B,MA/Bf,WACE,MAA+B3B,mBAAS,WAAxC,mBACA,GADA,UACiCA,mBAAS,KAA1C,mBAAO4B,EAAP,KAAiBC,EAAjB,KAmBMC,EAAgBF,EAAUG,KAAI,SAACC,GAAD,OAAK,cAAC,EAAD,CAAU/B,KAAM+B,OAEzD,OACE,sBAAK7B,UAAU,MAAf,UACA,cAAC,EAAD,CAAWL,SAtBb,SAAmBa,GACdiB,EAAUK,OAAS,GACtBJ,EAAa,GAAD,mBAAKD,GAAL,CAAgBjB,KAE1Bc,MAAM,qBAkBwB1B,SAdlC,WACE,IAAImC,EAAY,YAAON,GACpBM,EAAaD,OAAO,GACrBC,EAAaC,MACbN,EAAaK,IAGbT,MAAM,yBAQR,qBAAKrB,MAAO,CAACgC,QAAQ,OAAOC,SAAS,OAAOC,eAAe,UAA3D,SAAuER,QCpB5DS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASC,eAAe,SAM1ByB,M","file":"static/js/main.08c90769.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './Oneverone.css'\r\nimport { Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction Oneverone(props) {\r\n  const{ setvalue,removeAR } = props\r\n  const [name,setName] = useState('')\r\n  function CheckEnter(e){\r\n    if(e.key === 'Enter'){\r\n      document.getElementById('buttonRandom').click()\r\n    }\r\n  }\r\n  function onChangeName(e){\r\n    setName(e.target.value)\r\n  }\r\n  function SentName(){\r\n    if(name === ''){\r\n      alert('please enter name.')\r\n    }\r\n    else{\r\n    setvalue(name)\r\n      setName('')}\r\n  }\r\n  return (\r\n       \r\n        <div className='Container-1v1'>\r\n          <p style={{color:'white',fontSize:'64px',fontWeight:'bold'}}>1v1</p>\r\n          <p style={{color:'white',fontSize:'36px'}}>Enter Name</p>\r\n          <input className='Input-name' type='text' value={name} onKeyDown={((e)=>{CheckEnter(e)})} maxLength='20' onChange={(e)=>{onChangeName(e)}}></input>\r\n          <br/>\r\n          <div>\r\n          <button id='buttonRandom' className='Button-random' style={{width:'200px',textAlign:'center'}} onClick={(e)=>{SentName(e)}}>Enter</button>\r\n          <button className='Button-random' style={{width:'200px',textAlign:'center'}} onClick={(e)=>{removeAR()}}>Remove</button></div>\r\n          {/* {name != ''?<p>{name}</p>:null} */}\r\n        </div>\r\n            \r\n      \r\n    );\r\n  }\r\n  \r\n  export default Oneverone;","import './Listname.css'\r\nfunction Listname(props){\r\n    const {name} = props\r\n    return(\r\n        <div className='Listname-container'>\r\n            {name}\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Listname;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Oneverone from './component/Oneverone';\r\nimport Listname from './component/Listname';\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [showData,setShowData] = useState('No data')\r\n  const [dataArray,setDataArray] = useState([])\r\n  function pushArray(e){\r\n    if(dataArray.length < 12){\r\n    setDataArray([...dataArray, e])}\r\n    else{\r\n      alert('No more than 12.');\r\n    }\r\n  }\r\n\r\n  function RemoveName(){\r\n    let copyDataList = [...dataArray];\r\n    if(copyDataList.length>0){\r\n      copyDataList.pop();\r\n      setDataArray(copyDataList);\r\n    }\r\n    else{\r\n      alert('No people in list.')\r\n    }\r\n  }\r\n  const showDataArray = dataArray.map((n)=><Listname name={n}/>)\r\n    \r\n  return (\r\n    <div className='App'>\r\n    <Oneverone setvalue={pushArray} removeAR={RemoveName}/>\r\n    <div style={{display:'flex',flexWrap:'wrap',justifyContent:'center'}}>{showDataArray}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}